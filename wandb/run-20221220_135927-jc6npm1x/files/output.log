
DDRNetMTL_Split
Dataset: Nyuv2 | Training Task: Semantic + Depth + Normals | Primary Task: Semantic + Depth + Normals in Multi-task / Auxiliary Learning Mode with DDRNET
Applying Multi-task Methods: Weighting-based: Equal + Gradient-based: NONE
STEP. Loading datasets...
Data sanity check. RGB.shape: torch.Size([32, 3, 288, 384]),	Depth.shape torch.Size([32, 1, 288, 384]),    	Semantic.shape torch.Size([32, 288, 384]),	Normals.shape torch.Size([32, 3, 288, 384])
  0%|                                                                                                                                                         | 0/25 [00:00<?, ?it/s]/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/torch/nn/functional.py:3635: UserWarning: Default upsampling behavior when mode=bilinear is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  "See the documentation of nn.Upsample for details.".format(mode)


 72%|███████████████████████████████████████████████████████████████████████████████████████████████████████▋                                        | 18/25 [00:05<00:02,  3.39it/s]
1
2
3
4
5
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 25/25 [00:07<00:00,  3.19it/s]
train_model.py:290: RuntimeWarning: invalid value encountered in true_divide
  depth = (depth - np.min(depth)) / (np.max(depth) - np.min(depth))
1
2
3
4
5
6
1
2
3
4
5
6
1
2
3
4
5
6
Traceback (most recent call last):
  File "train_model.py", line 470, in <module>
    test_loss = [compute_loss(test_pred[i], test_target[task_id], task_id) for i, task_id in enumerate(train_tasks)]
  File "train_model.py", line 470, in <listcomp>
    test_loss = [compute_loss(test_pred[i], test_target[task_id], task_id) for i, task_id in enumerate(train_tasks)]
  File "/home/dim/mdpi_robotics/mtl-world/utils.py", line 133, in compute_loss
    loss = F.cross_entropy(pred, gt, ignore_index=-1)
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/torch/nn/functional.py", line 2846, in cross_entropy
    return torch._C._nn.cross_entropy_loss(input, target, weight, _Reduction.get_enum(reduction), ignore_index, label_smoothing)
KeyboardInterrupt