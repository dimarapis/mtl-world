ResNetMTL_Split
Dataset: Nyuv2 | Training Task: Semantic + Depth + Normals | Primary Task: Semantic + Depth + Normals in Multi-task / Auxiliary Learning Mode with RESNET
Applying Multi-task Methods: Weighting-based: Equal + Gradient-based: None
STEP. Loading datasets...
Data sanity check. RGB.shape: torch.Size([32, 3, 288, 384]),	Depth.shape torch.Size([32, 1, 288, 384]),        	Semantic.shape torch.Size([32, 288, 384]),	Normals.shape torch.Size([32, 3, 288, 384])


  8%|████▊                                                       | 2/25 [00:10<01:55,  5.01s/it]
Traceback (most recent call last):
  File "/home/robotlabx/mtl-world/train_model.py", line 624, in <module>
    training(opt)
  File "/home/robotlabx/mtl-world/train_model.py", line 351, in training
    loss.backward()
  File "/home/robotlabx/anaconda3/envs/multisim/lib/python3.9/site-packages/torch/_tensor.py", line 488, in backward
    torch.autograd.backward(
  File "/home/robotlabx/anaconda3/envs/multisim/lib/python3.9/site-packages/torch/autograd/__init__.py", line 197, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt