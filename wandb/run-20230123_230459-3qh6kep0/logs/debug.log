2023-01-23 23:04:59,132 INFO    MainThread:19456 [wandb_setup.py:_flush():76] Loading settings from /home/dim/.config/wandb/settings
2023-01-23 23:04:59,132 INFO    MainThread:19456 [wandb_setup.py:_flush():76] Loading settings from /home/dim/mdpi_robotics/mtl-world/wandb/settings
2023-01-23 23:04:59,132 INFO    MainThread:19456 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
2023-01-23 23:04:59,132 INFO    MainThread:19456 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'train_model.py', 'program': 'train_model.py'}
2023-01-23 23:04:59,132 INFO    MainThread:19456 [wandb_init.py:_log_setup():428] Logging user logs to /home/dim/mdpi_robotics/mtl-world/wandb/run-20230123_230459-3qh6kep0/logs/debug.log
2023-01-23 23:04:59,132 INFO    MainThread:19456 [wandb_init.py:_log_setup():429] Logging internal logs to /home/dim/mdpi_robotics/mtl-world/wandb/run-20230123_230459-3qh6kep0/logs/debug-internal.log
2023-01-23 23:04:59,132 INFO    MainThread:19456 [wandb_init.py:init():462] calling init triggers
2023-01-23 23:04:59,132 INFO    MainThread:19456 [wandb_init.py:init():466] wandb.init called with sweep_config: {}
config: {'data': {'path': 'dataset', 'dataset': 'nyuv2', 'augmentation.trigger': False, 'batch_size': 4, 'input_size': None}, 'network': {'tasks': 'all', 'weighting': 'equal', 'backbone': 'ResNet', 'mtl_architecture': 'Split', 'pretrained': False, 'grad_method': None}, 'training': {'epochs': 30, 'optimizer': 'sgd', 'learning_rate': 0.0001, 'weight_decay': 1e-05, 'early_stop': False, 'scheduler': 'multisteplr', 'step': 10, 'loss_function': 'cross_entropy', 't_checkpoint': False, 'o_checkpoint': None}, 'reproduceability': {'t_seed': True, 'o_seed': 29}, 'wandb': {'t_logger': True, 'project_name': 'MTLwarehouse', 'entity': 'wandbdimar'}}
2023-01-23 23:04:59,133 INFO    MainThread:19456 [wandb_init.py:init():515] starting backend
2023-01-23 23:04:59,133 INFO    MainThread:19456 [backend.py:_multiprocessing_setup():99] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
2023-01-23 23:04:59,142 INFO    MainThread:19456 [backend.py:ensure_launched():217] starting backend process...
2023-01-23 23:04:59,148 INFO    MainThread:19456 [backend.py:ensure_launched():222] started backend process with pid: 19489
2023-01-23 23:04:59,150 INFO    MainThread:19456 [wandb_init.py:init():525] backend started and connected
2023-01-23 23:04:59,157 INFO    MainThread:19456 [wandb_init.py:init():596] updated telemetry
2023-01-23 23:04:59,172 INFO    MainThread:19456 [wandb_init.py:init():628] communicating run to backend with 30 second timeout
2023-01-23 23:05:00,305 INFO    MainThread:19456 [wandb_run.py:_on_init():1924] communicating current version
2023-01-23 23:05:00,444 INFO    MainThread:19456 [wandb_run.py:_on_init():1928] got version response upgrade_message: "wandb version 0.13.9 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"

2023-01-23 23:05:00,444 INFO    MainThread:19456 [wandb_init.py:init():662] starting run threads in backend
2023-01-23 23:05:01,528 WARNING MainThread:19456 [wandb_init.py:init():1020] interrupted
Traceback (most recent call last):
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/wandb/sdk/wandb_init.py", line 999, in init
    run = wi.init()
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/wandb/sdk/wandb_init.py", line 673, in init
    _ = backend.interface.communicate_run_start(run_obj)
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/wandb/sdk/interface/interface.py", line 234, in communicate_run_start
    result = self._communicate_run_start(run_start)
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 440, in _communicate_run_start
    result = self._communicate(rec)
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 226, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/wandb/sdk/interface/router.py", line 37, in get
    is_set = self._object_ready.wait(timeout)
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/threading.py", line 552, in wait
    signaled = self._cond.wait(timeout)
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/threading.py", line 300, in wait
    gotit = waiter.acquire(True, timeout)
KeyboardInterrupt
